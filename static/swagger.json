{"openapi": "3.0.0", "info": {"title": "Flask Authentication API with OAuth2/SSO", "description": "API for user authentication with email verification and OAuth2/SSO support", "version": "1.0.0"}, "servers": [{"url": "http://localhost:5000", "description": "Development server"}], "components": {"securitySchemes": {"bearerAuth": {"type": "http", "scheme": "bearer", "bearerFormat": "JWT"}, "oauth2Auth": {"type": "oauth2", "flows": {"authorizationCode": {"authorizationUrl": "http://localhost:5000/oauth/authorize", "tokenUrl": "http://localhost:5000/oauth/token", "scopes": {"profile": "Access to user profile information", "manage_clients": "Manage OAuth2 clients"}}}}}}, "tags": [{"name": "Authentication", "description": "Authentication operations"}, {"name": "User", "description": "User operations"}, {"name": "Email Verification", "description": "Email verification operations"}, {"name": "OAuth2", "description": "OAuth2 and SSO operations"}], "paths": {"/register": {"post": {"tags": ["Authentication"], "summary": "Register a new user", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"username": {"type": "string", "example": "testuser"}, "email": {"type": "string", "format": "email", "example": "user@example.com"}, "password": {"type": "string", "format": "password", "example": "password123"}}, "required": ["username", "email", "password"]}}}}, "responses": {"201": {"description": "User created successfully"}, "400": {"description": "Bad request - missing fields or user already exists"}}}}, "/login": {"post": {"tags": ["Authentication"], "summary": "Login to get a JWT token", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"username": {"type": "string", "example": "testuser"}, "password": {"type": "string", "format": "password", "example": "password123"}}, "required": ["username", "password"]}}}}, "responses": {"200": {"description": "Login successful", "content": {"application/json": {"schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Login successful"}, "token": {"type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}, "expires_in": {"type": "integer", "example": 86400}, "email_verified": {"type": "boolean", "example": true}}}}}}, "401": {"description": "Invalid credentials"}}}}, "/oauth/authorize": {"get": {"tags": ["OAuth2"], "summary": "OAuth2 authorization endpoint", "security": [{"bearerAuth": []}], "parameters": [{"name": "response_type", "in": "query", "required": true, "schema": {"type": "string", "enum": ["code"]}, "description": "OAuth2 response type (must be 'code')"}, {"name": "client_id", "in": "query", "required": true, "schema": {"type": "string"}, "description": "OAuth2 client ID"}, {"name": "redirect_uri", "in": "query", "required": true, "schema": {"type": "string"}, "description": "Callback URL for the authorization code"}, {"name": "scope", "in": "query", "required": true, "schema": {"type": "string"}, "description": "Space-separated list of requested scopes"}, {"name": "code_challenge", "in": "query", "required": true, "schema": {"type": "string"}, "description": "PKCE code challenge"}, {"name": "code_challenge_method", "in": "query", "required": true, "schema": {"type": "string", "enum": ["S256"]}, "description": "PKCE code challenge method (must be 'S256')"}], "responses": {"200": {"description": "Authorization form displayed"}, "401": {"description": "Unauthorized"}, "400": {"description": "Invalid request"}}}, "post": {"tags": ["OAuth2"], "summary": "Submit OAuth2 authorization decision", "security": [{"bearerAuth": []}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"type": "object", "properties": {"confirm": {"type": "string", "enum": ["Authorize", "Deny"]}}, "required": ["confirm"]}}}}, "responses": {"302": {"description": "Redirect to client with authorization code or error"}, "401": {"description": "Unauthorized"}, "400": {"description": "Invalid request"}}}}, "/oauth/token": {"post": {"tags": ["OAuth2"], "summary": "Exchange authorization code for access token", "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"type": "object", "properties": {"grant_type": {"type": "string", "enum": ["authorization_code"]}, "code": {"type": "string"}, "redirect_uri": {"type": "string"}, "code_verifier": {"type": "string"}}, "required": ["grant_type", "code", "redirect_uri", "code_verifier"]}}}}, "responses": {"200": {"description": "Access token issued", "content": {"application/json": {"schema": {"type": "object", "properties": {"access_token": {"type": "string"}, "token_type": {"type": "string", "example": "Bearer"}, "expires_in": {"type": "integer"}, "scope": {"type": "string"}}}}}}, "400": {"description": "Invalid request"}}}}, "/oauth/userinfo": {"get": {"tags": ["OAuth2"], "summary": "Get user information", "security": [{"oauth2Auth": ["profile"]}], "responses": {"200": {"description": "User information", "content": {"application/json": {"schema": {"type": "object", "properties": {"sub": {"type": "string"}, "username": {"type": "string"}, "email": {"type": "string"}, "email_verified": {"type": "boolean"}}}}}}, "401": {"description": "Unauthorized"}}}}, "/oauth/clients": {"get": {"tags": ["OAuth2"], "summary": "List OAuth2 clients", "security": [{"bearerAuth": []}], "responses": {"200": {"description": "List of OAuth2 clients", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "properties": {"client_id": {"type": "string"}, "client_name": {"type": "string"}, "redirect_uris": {"type": "array", "items": {"type": "string"}}, "grant_types": {"type": "array", "items": {"type": "string"}}, "response_types": {"type": "array", "items": {"type": "string"}}, "scope": {"type": "string"}}}}}}}, "401": {"description": "Unauthorized"}}}, "post": {"tags": ["OAuth2"], "summary": "Create new OAuth2 client", "security": [{"bearerAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"client_name": {"type": "string"}, "redirect_uris": {"type": "array", "items": {"type": "string"}}, "grant_types": {"type": "array", "items": {"type": "string"}}, "response_types": {"type": "array", "items": {"type": "string"}}, "scope": {"type": "string"}}, "required": ["client_name", "redirect_uris"]}}}}, "responses": {"201": {"description": "OAuth2 client created", "content": {"application/json": {"schema": {"type": "object", "properties": {"client_id": {"type": "string"}, "client_secret": {"type": "string"}, "client_name": {"type": "string"}, "redirect_uris": {"type": "array", "items": {"type": "string"}}, "grant_types": {"type": "array", "items": {"type": "string"}}, "response_types": {"type": "array", "items": {"type": "string"}}, "scope": {"type": "string"}}}}}}, "401": {"description": "Unauthorized"}, "403": {"description": "Email not verified"}}}}}}